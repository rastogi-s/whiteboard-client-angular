{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/component/admin/admin.component.css","webpack:///./src/app/component/admin/admin.component.html","webpack:///./src/app/component/admin/admin.component.ts","webpack:///./src/app/component/course-grid/course-grid.component.css","webpack:///./src/app/component/course-grid/course-grid.component.html","webpack:///./src/app/component/course-grid/course-grid.component.ts","webpack:///./src/app/component/course-viewer/course-viewer.component.css","webpack:///./src/app/component/course-viewer/course-viewer.component.html","webpack:///./src/app/component/course-viewer/course-viewer.component.ts","webpack:///./src/app/component/faculty-access/faculty-access.component.css","webpack:///./src/app/component/faculty-access/faculty-access.component.html","webpack:///./src/app/component/faculty-access/faculty-access.component.ts","webpack:///./src/app/component/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/component/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/component/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/component/login/login.component.css","webpack:///./src/app/component/login/login.component.html","webpack:///./src/app/component/login/login.component.ts","webpack:///./src/app/component/module-list/module-list.component.css","webpack:///./src/app/component/module-list/module-list.component.html","webpack:///./src/app/component/module-list/module-list.component.ts","webpack:///./src/app/component/profile/profile.component.css","webpack:///./src/app/component/profile/profile.component.html","webpack:///./src/app/component/profile/profile.component.ts","webpack:///./src/app/component/register/register.component.css","webpack:///./src/app/component/register/register.component.html","webpack:///./src/app/component/register/register.component.ts","webpack:///./src/app/component/section-list/section-list.component.css","webpack:///./src/app/component/section-list/section-list.component.html","webpack:///./src/app/component/section-list/section-list.component.ts","webpack:///./src/app/component/topic-pills/topic-pills.component.css","webpack:///./src/app/component/topic-pills/topic-pills.component.html","webpack:///./src/app/component/topic-pills/topic-pills.component.ts","webpack:///./src/app/component/white-board/white-board.component.css","webpack:///./src/app/component/white-board/white-board.component.html","webpack:///./src/app/component/white-board/white-board.component.ts","webpack:///./src/app/component/widget-list/widget-list.component.css","webpack:///./src/app/component/widget-list/widget-list.component.html","webpack:///./src/app/component/widget-list/widget-list.component.ts","webpack:///./src/app/models/section.model.client.ts","webpack:///./src/app/models/user.model.client.ts","webpack:///./src/app/services/course-privacy.service.ts","webpack:///./src/app/services/course.service.ts","webpack:///./src/app/services/lesson.service.ts","webpack:///./src/app/services/module.service.ts","webpack:///./src/app/services/section.service.ts","webpack:///./src/app/services/topic.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/widget.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-white-board></app-white-board>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {routing} from './app.routing';\nimport {AppComponent} from './app.component';\nimport {RegisterComponent} from './component/register/register.component';\nimport {WhiteBoardComponent} from './component/white-board/white-board.component';\nimport {LoginComponent} from './component/login/login.component';\nimport {ProfileComponent} from './component/profile/profile.component';\nimport {AdminComponent} from './component/admin/admin.component';\nimport {CourseGridComponent} from './component/course-grid/course-grid.component';\nimport {CourseService} from './services/course.service';\nimport {ModuleService} from './services/module.service';\nimport {UserService} from './services/user.service';\nimport {TopicService} from './services/topic.service';\nimport {LessonService} from './services/lesson.service';\nimport {WidgetService} from './services/widget.service';\nimport { CourseViewerComponent } from './component/course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './component/module-list/module-list.component';\nimport { LessonTabsComponent } from './component/lesson-tabs/lesson-tabs.component';\nimport { TopicPillsComponent } from './component/topic-pills/topic-pills.component';\nimport { WidgetListComponent } from './component/widget-list/widget-list.component';\nimport { SectionListComponent } from './component/section-list/section-list.component';\nimport {CoursePrivacyService} from './services/course-privacy.service';\nimport { FacultyAccessComponent } from './component/faculty-access/faculty-access.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    WhiteBoardComponent,\n    LoginComponent,\n    ProfileComponent,\n    AdminComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    TopicPillsComponent,\n    WidgetListComponent,\n    SectionListComponent,\n    FacultyAccessComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule\n  ],\n  providers: [\n    CourseService,\n    ModuleService,\n    UserService,\n    TopicService,\n    LessonService,\n    WidgetService,\n    CoursePrivacyService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {RouterModule, Routes} from '@angular/router';\r\nimport { RegisterComponent } from './component/register/register.component';\r\nimport { CourseGridComponent } from './component/course-grid/course-grid.component';\r\nimport { LoginComponent } from './component/login/login.component';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport { AdminComponent } from './component/admin/admin.component';\r\nimport {CourseViewerComponent} from './component/course-viewer/course-viewer.component';\r\nimport {SectionListComponent} from './component/section-list/section-list.component';\r\nimport {FacultyAccessComponent} from './component/faculty-access/faculty-access.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: CourseGridComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'admin', component: AdminComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'faculty', component: FacultyAccessComponent},\r\n  { path: 'course/:courseId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/section', component: SectionListComponent },\r\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\r\n  { path: '**', component: CourseGridComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row navbar navbar-expand-lg  bg-dark text-light m-3\\\">\\n  <div class=\\\"col text-center\\\">\\n    <h3>Course List</h3>\\n  </div>\\n</div>\\n\\n<div *ngFor=\\\"let course of courses\\\" class=\\\"m-3\\\">\\n  <div class=\\\"row bg-light text-dark p-2 mx-3\\\" data-toggle=\\\"collapse\\\"\\n       [attr.data-target]=\\\" '#'+ course.id\\\">\\n    <div class=\\\"col\\\">\\n      <h5>{{course.title}}</h5>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <i class=\\\"btn fa fa-angle-down fa-2x float-right p-0 navbar-toggler\\\" data-toggle=\\\"collapse\\\"\\n         [attr.data-target]=\\\" '#'+ course.id \\\"> </i>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"collapse navbar-collapse bg-dark text-dark p-3 mx-3 \\\" id={{course.id}}>\\n    <form class=\\\"form-inline\\\" #formInline=\\\"ngForm\\\">\\n      <input [(ngModel)]=\\\"sectionName\\\"\\n             placeholder=\\\"Section Name\\\" name=\\\"sectionName\\\"\\n             class=\\\"form-control mr-4\\\">\\n      <input [(ngModel)]=\\\"seats\\\"\\n             placeholder=\\\"Seats available\\\" name=\\\"seats\\\"\\n             class=\\\"form-control mr-4\\\">\\n      <button (click)=\\\"createSection(course.id, sectionName, seats, course.title); formInline.reset(); \\\"\\n              class=\\\"btn btn-success\\\">\\n        Add Section\\n      </button>\\n    </form>\\n    <!--{{edit && editCourseId==course.id}}-->\\n    <ul class=\\\"list-group mt-3\\\">\\n      <li class=\\\"list-group-item bg-primary text-light\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            Sections\\n          </div>\\n          <div class=\\\"col\\\">\\n            Max Seats\\n          </div>\\n          <div class=\\\"col\\\">\\n            Available Seats\\n          </div>\\n          <div class=\\\"col\\\">\\n\\n          </div>\\n        </div>\\n      </li>\\n      <li *ngFor=\\\"let section of courseSection[course.id]\\\"\\n          class=\\\"list-group-item \\\">\\n        <div class=\\\"row\\\" [hidden]=\\\"(edit && editSectionId==section._id)\\\">\\n          <div class=\\\"col\\\" >\\n            {{section.name}}\\n          </div>\\n          <div class=\\\"col\\\">\\n            {{section.maxSeats}}\\n          </div>\\n          <div class=\\\"col\\\">\\n            {{section.availableSeats}}\\n          </div>\\n          <div class=\\\"col\\\">\\n            <i class=\\\"fa fa-trash btn float-right\\\" (click)=\\\"deleteSection(section._id)\\\"></i>\\n            <i class=\\\"fa fa-pencil-alt btn float-right\\\" (click)=\\\"edit=true;\\n             editSectionId=section._id; sectionName=section.name; seats = section.maxSeats \\\"></i>\\n            <i class=\\\"fa fa-check btn float-right\\\" (click)=\\\"updateSection(section._id, sectionName, seats)\\\"></i>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" [hidden]=\\\"!(edit && editSectionId==section._id)\\\">\\n          <div class=\\\"col\\\" >\\n            <input [(ngModel)]=\\\"sectionName\\\"\\n                   placeholder=\\\"Section Name\\\" name=\\\"sectionName\\\"\\n                   class=\\\"form-control\\\" >\\n          </div>\\n          <div class=\\\"col\\\">\\n            <input [(ngModel)]=\\\"seats\\\"\\n                   placeholder=\\\"Seats available\\\"  name=\\\"seats\\\"\\n                   class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"col\\\">\\n            {{section.availableSeats}}\\n          </div>\\n          <div class=\\\"col\\\">\\n            <i class=\\\"fa fa-trash btn float-right disabled\\\" ></i>\\n            <i class=\\\"fa fa-times btn float-right\\\"  (click)=\\\"edit=false; editSectionId=''; sectionName='';\\n             seats = '';\\\" ></i>\\n            <i class=\\\"fa fa-check btn float-right\\\" (click)=\\\"updateSection(section._id, sectionName, seats, section);\\n                 sectionName=''; seats = '';\\\"></i>\\n          </div>\\n        </div>\\n\\n\\n\\n        <!--<i class=\\\"fa fa-pencil btn float-right\\\" (click)=\\\"edit(section._id)\\\"></i>-->\\n      </li>\\n    </ul>\\n\\n    <!--*ngFor=\\\"let section of fetchSections(course.id)\\\"-->\\n    <!--<div class=\\\"row\\\" >-->\\n    <!--<div class=\\\"col\\\"></div>-->\\n    <!--</div>-->\\n  </div>\\n</div>\\n\\n\\n<!--<div class=\\\"container\\\">-->\\n\\n<!--</div>-->\\n\"","import {Component, OnInit} from '@angular/core';\nimport {SectionService} from '../../services/section.service';\nimport {Course} from '../../models/course.model.client';\nimport {CourseService} from '../../services/course.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Section} from '../../models/section.model.client';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private service: SectionService, private courseService: CourseService,\n              private router: Router, private route: ActivatedRoute) {\n    // this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sections = [];\n  course: Course;\n  courses: Course[] = [];\n  courseSection = {};\n  edit = false;\n  editSectionId = '';\n\n  loadSections() {\n\n    this.courseSection = {};\n    this.service.findAllSections().then((sections) => {\n\n      for (const s in sections) {\n        if (this.courseSection[sections[s].courseId] == null) {\n          this.courseSection[sections[s].courseId] = [];\n          this.courseSection[sections[s].courseId].push(sections[s]);\n        } else {\n          this.courseSection[sections[s].courseId].push(sections[s]);\n        }\n      }\n    });\n\n    // this.sectionName = '';\n    // this.seats = '';\n\n  }\n\n  createSection(courseId, sectionName, seats, courseName) {\n\n    if (sectionName == null || sectionName === '') {\n      sectionName = courseName + ' Section ' + 1; // (this.courseSection[courseId].length + 1 ) ;\n    }\n    if (seats == null || seats === '') {\n      seats = '0';\n    }\n\n    this\n      .service\n      .createSection(courseId, sectionName, seats)\n      .then(() => {\n        this.loadSections();\n      });\n  }\n\n\n  updateSection(sectionId, sectionName, seats, oldSection) {\n\n    const newIncrement = oldSection.maxSeats - seats;\n    var newAvailable = oldSection.availableSeats - newIncrement;\n    if (newAvailable < 0) {\n      newAvailable = 0;\n    }\n    const section = new Section();\n    section.name = sectionName;\n    section.maxSeats = seats;\n    section.availableSeats = newAvailable;\n    this.service.updateSection(sectionId, section).then(() => this.loadSections()).then(() => {\n      this.edit = false;\n      this.editSectionId = '';\n      this.sectionName = '';\n      this.seats = '';\n    });\n  }\n\n  // enroll(section) {\n  //   this.service\n  //     .enrollStudentInSection(section._id)\n  //     .then(() => {\n  //       this.router.navigate(['profile']);\n  //     });\n  // }\n\n  deleteSection(sectionId) {\n    this.service.deleteSection(sectionId).then(() => this.loadSections());\n  }\n\n\n  ngOnInit() {\n    this.courseService.findAllCourses().then(courses => this.courses = courses).then(\n      () => this.service.findAllSections().then((sections) => {\n\n        for (const s in sections) {\n          if (this.courseSection[sections[s].courseId] == null) {\n            this.courseSection[sections[s].courseId] = [];\n            this.courseSection[sections[s].courseId].push(sections[s]);\n          } else {\n            this.courseSection[sections[s].courseId].push(sections[s]);\n          }\n        }\n      })\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row navbar navbar-expand-lg  bg-dark text-light m-3\\\" [hidden]=\\\"!(registeredCourses.length > 0)\\\">\\r\\n  <div class=\\\"col text-center\\\">\\r\\n    <h3>Registered Courses</h3>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"p-5 bg-light rounded \\\" [hidden]=\\\"!(registeredCourses.length > 0)\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let course of registeredCourses\\\" class=\\\"col-sm-3\\\" >\\r\\n      <div class=\\\"card mt-2 mb-2\\\">\\r\\n        <img class=\\\"card-img-top\\\" src=\\\"../../../assets/images/image1.jpg\\\" alt=\\\"Card Image Cap\\\"/>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\r\\n          <small class=\\\"text-muted\\\" [hidden]=\\\"!checkPrivacy(course.id)\\\" ># private</small>\\r\\n          <small class=\\\"text-muted\\\" [hidden]=\\\"checkPrivacy(course.id)\\\" ># public</small>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <a routerLink=\\\"/course/{{course.id}}/section\\\" class=\\\"btn btn-dark float-left \\\" href=\\\"#\\\">Enroll</a>\\r\\n          <a routerLink=\\\"/course/{{course.id}}\\\" class=\\\"btn btn-dark float-right \\\" href=\\\"#\\\">View</a>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row navbar navbar-expand-lg  bg-dark text-light m-3\\\" [hidden]=\\\"!(registeredCourses.length > 0)\\\" >\\r\\n  <div class=\\\"col text-center\\\">\\r\\n    <h3>Non Registered Courses</h3>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"p-5 bg-light rounded \\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let course of nonRegisteredCourses\\\" class=\\\"col-sm-3\\\">\\r\\n      <div class=\\\"card mt-2 mb-2\\\">\\r\\n        <img class=\\\"card-img-top\\\" src=\\\"../../../assets/images/image1.jpg\\\" alt=\\\"Card Image Cap\\\"/>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\r\\n          <small class=\\\"text-muted\\\" [hidden]=\\\"!checkPrivacy(course.id)\\\" ># private</small>\\r\\n          <small class=\\\"text-muted\\\" [hidden]=\\\"checkPrivacy(course.id)\\\" ># public</small>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <button  routerLink=\\\"/course/{{course.id}}/section\\\" class=\\\"btn btn-dark float-left \\\" href=\\\"#\\\">Enroll</button>\\r\\n          <button [disabled]=\\\"checkPrivacy(course.id)\\\" routerLink=\\\"/course/{{course.id}}\\\"\\r\\n                  class=\\\"btn btn-dark float-right\\\" href=\\\"#\\\" >View</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Course} from '../../models/course.model.client';\nimport {CourseService} from '../../services/course.service';\nimport {UserService} from '../../services/user.service';\nimport {User} from '../../models/user.model.client';\nimport {SectionService} from '../../services/section.service';\nimport {CoursePrivacyService} from '../../services/course-privacy.service';\n\n@Component({\n\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n\n})\nexport class CourseGridComponent implements OnInit {\n\n  courses: Course[] = [];\n  registeredCourseIds = [];\n  registeredCourses = [];\n  nonRegisteredCourses = [];\n  user: User;\n  studentSections = [];\n  privateCourses = [];\n\n  constructor(private service: CourseService,\n              private userService: UserService,\n              private sectionService: SectionService,\n              private coursePrivacyService: CoursePrivacyService ) {\n  }\n\n  ngOnInit() {\n    this.service.findAllCourses().then(courses => this.courses = courses).then(() =>\n      this.sectionService.findSectionsForStudent().then((sections) => {\n        if (sections.length > 0) {\n          this.studentSections = sections;\n          this.registeredCourseIds = this.studentSections.map((sect) => sect.section.courseId);\n          this.registeredCourses = this.courses.filter((course) => this.registeredCourseIds.includes(course.id.toString()));\n          this.nonRegisteredCourses = this.courses.filter((course) => (!this.registeredCourseIds.includes(course.id.toString())));\n        } else {\n          this.nonRegisteredCourses = this.courses;\n        }\n      })).then( () => this.coursePrivacyService.getAllPrivateCourses().then( privateCourse =>\n      this.privateCourses = privateCourse));\n  }\n\n  checkPrivacy(courseId) {\n    return this.privateCourses.filter(records => records.courseId === courseId.toString()).length > 0;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark mb-3\\\">\\r\\n  <i class=\\\"btn fa fa-2x fa-times text-light mr-3\\\" routerLink=\\\"/home\\\"></i>\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{course.title}}</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n          aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n</nav>\\r\\n\\r\\n<app-module-list></app-module-list>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CourseService} from '../../services/course.service';\nimport {Course} from '../../models/course.model.client';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  courseId;\n  course: Course;\n\n  constructor(private courseService: CourseService, private route: ActivatedRoute) {\n    this.course = { id: '1' , title : 'dummy' };\n    this.route.params.subscribe(\n      params => this.courseId = params['courseId']);\n\n    if (this.courseId != null && this.courseId !== '') {\n        this.courseService.findCourseById(this.courseId).\n        then((course) => this.course = course);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row navbar navbar-expand-lg  bg-dark text-light m-3\\\" >\\n  <div class=\\\"col text-center\\\">\\n    <h3>Course List</h3>\\n  </div>\\n</div>\\n\\n<div class=\\\"row bg-light text-dark p-2 mx-3 mb-1\\\" *ngFor=\\\"let course of courses\\\">\\n  <div class=\\\"col\\\">\\n    <h5>{{course.title}}</h5>\\n  </div>\\n  <div class=\\\"col\\\" >\\n    <h5 [hidden]=\\\"!checkPrivacy(course.id)\\\"># private</h5>\\n    <h5 [hidden]=\\\"checkPrivacy(course.id)\\\"># public</h5>\\n  </div>\\n\\n  <div class=\\\"col\\\">\\n    <button (click)=\\\"makePrivate(course.id)\\\"\\n            class=\\\"float-right btn btn-danger\\\" [hidden]=\\\"checkPrivacy(course.id)\\\">Make Private</button>\\n    <button (click)=\\\"makePublic(course.id)\\\"\\n            class=\\\"float-right btn btn-success\\\" [hidden]=\\\"!checkPrivacy(course.id)\\\">Make Public</button>\\n  </div>\\n</div>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Course} from '../../models/course.model.client';\nimport {CourseService} from '../../services/course.service';\nimport {CoursePrivacyService} from '../../services/course-privacy.service';\n\n@Component({\n  selector: 'app-faculty-access',\n  templateUrl: './faculty-access.component.html',\n  styleUrls: ['./faculty-access.component.css']\n})\nexport class FacultyAccessComponent implements OnInit {\n\n  courses: Course[] = [];\n  privateCourseIds = [];\n\n  constructor(private courseService: CourseService, private coursePrivacy: CoursePrivacyService) {\n  }\n\n  ngOnInit() {\n    this.courseService.findAllCourses().then((courses) =>\n      this.courses = courses).then(() =>\n      this.coursePrivacy.getAllPrivateCourses().then((privateCourses) =>\n        this.privateCourseIds = privateCourses));\n  }\n\n  makePublic(courseId) {\n\n    this.coursePrivacy.makeCoursePublic(courseId).then(() =>\n      this.coursePrivacy.getAllPrivateCourses().then((privateCourses) =>\n        this.privateCourseIds = privateCourses));\n\n  }\n\n  makePrivate(courseId) {\n\n    this.coursePrivacy.makeCoursePrivate(courseId).then(() =>\n      this.coursePrivacy.getAllPrivateCourses().then((privateCourses) =>\n        this.privateCourseIds = privateCourses));\n\n  }\n\n  checkPrivacy(courseId) {\n      return this.privateCourseIds.filter(records => records.courseId === courseId.toString()).length > 0;\n  }\n\n}\n","module.exports = \".active.wbdv {\\r\\n  background-color: #b9bbbe;\\r\\n  border-color: #b9bbbe;\\r\\n  color:white;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\" >\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link wbdv\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n<app-topic-pills></app-topic-pills>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {LessonService} from '../../services/lesson.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {LessonModelClient} from '../../models/lesson.model.client';\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons: LessonModelClient[] = [];\n\n  constructor(private service: LessonService,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons();\n  }\n\n  loadLessons() {\n    if (this.courseId !== undefined && this.moduleId !== undefined) {\n      this.service.findAllLessonsForModule(this.courseId, this.moduleId)\n        .then(lessons => this.lessons = lessons);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/*.alert{*/\\r\\n  /*display: none;*/\\r\\n  /*}*/\\r\\n  .mandatory{\\r\\n  color:red;\\r\\n}\\r\\n  .needs-validation {\\r\\n  width: 100%;\\r\\n  max-width: 800px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n  margin-top: 100px;\\r\\n}\\r\\n  .ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n  .ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<section class=\\\"content\\\">\\r\\n  <div class=\\\"container con\\\">\\r\\n    <form class=\\\"needs-validation\\\" #form=\\\"ngForm\\\">\\r\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" [hidden]=\\\"!badUserNamePass\\\">\\r\\n        Entered a wrong username or password!!\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"username\\\" class=\\\"col-sm-2 col-form-label\\\">Username<span class=\\\"mandatory\\\">*</span></label>\\r\\n\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Xyz\\\" id=\\\"username\\\" class=\\\"form-control\\\"\\r\\n                 required [(ngModel)]=\\\"username\\\" name=\\\"username\\\" #userName=\\\"ngModel\\\" >\\r\\n          <div [hidden]=\\\"userName.valid || userName.pristine\\\"  class=\\\"mt-2 alert alert-danger\\\">\\r\\n            Username required!!\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"password\\\" class=\\\"col-sm-2 col-form-label\\\">Password<span class=\\\"mandatory\\\">*</span></label>\\r\\n\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n          <input type=\\\"password\\\" placeholder=\\\"123qwe#$\\\" id=\\\"password\\\" class=\\\"form-control\\\" required\\r\\n                  [(ngModel)]=\\\"password\\\" name=\\\"password\\\" #pass=\\\"ngModel\\\">\\r\\n          <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"mt-2 alert alert-danger\\\">\\r\\n            Password required!!\\r\\n          </div>\\r\\n          <div class=\\\"invalid-feedback invalid-password\\\">\\r\\n            Please enter a valid password!!\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <span class=\\\"col-sm-2\\\"></span>\\r\\n        <div class=\\\"col-sm-10 d-inline-block\\\">\\r\\n          <div class=\\\"py-1\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success form-control\\\" id=\\\"login\\\"\\r\\n                    (click)=\\\"login(username,password);  form.reset();\\\" [disabled]=\\\"!form.form.valid\\\"\\r\\n            >Sign In</button>\\r\\n          </div>\\r\\n          <!--<div class=\\\"py-1 d-inline\\\">-->\\r\\n            <!--<a href=\\\"\\\" class=\\\"float-left forgot-pass\\\" data-toggle=\\\"modal\\\" data-target=\\\"#forgotPassword\\\">Forgot-->\\r\\n              <!--Password?</a>-->\\r\\n            <!--&lt;!&ndash;<a href=\\\"../register/register.template.client.html\\\" class=\\\"float-right\\\">Sign Up</a>&ndash;&gt;-->\\r\\n          <!--</div>-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <!-- Modal -->\\r\\n    <div class=\\\"modal fade\\\" id=\\\"forgotPassword\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n         aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header \\\">\\r\\n            <h5 class=\\\"modal-title\\\" id=\\\"modalTitle\\\">Forgot Password</h5>\\r\\n\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <h6 id=\\\"modal-text\\\" class=\\\"py-2\\\">Enter valid Username and Email Id to Reset password</h6>\\r\\n            <form class=\\\"needs-validation\\\" novalidate>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"usernameVerify\\\" class=\\\"col-sm-2 col-form-label\\\">Username</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text\\\" placeholder=\\\"Username\\\" id=\\\"usernameVerify\\\" class=\\\"form-control\\\"\\r\\n                         required>\\r\\n\\r\\n                  <div class=\\\"invalid-feedback invalid-username-verify\\\">\\r\\n                    Please enter a valid username!!\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"resetEmail\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"email\\\" placeholder=\\\"abc@xyz.com\\\" id=\\\"resetEmail\\\" class=\\\"form-control\\\"\\r\\n                         required>\\r\\n\\r\\n                  <div class=\\\"invalid-feedback invalid-username-verify\\\">\\r\\n                    Please enter a valid email!!\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary close-modal\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"sendEmail\\\">Send Email</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</section>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserService} from '../../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  username: string;\n  password: string;\n  badUserNamePass: boolean;\n\n\n  constructor(private router: Router, private userService: UserService) {\n    this.badUserNamePass = false;\n  }\n\n\n  login(username, password) {\n\n    this.userService\n      .login(username, password)\n      .then((user) => {\n        if (user != null) {\n          if (user.username === 'admin') {\n            this.router.navigate(['admin']);\n          } else if (user.username === 'faculty') {\n            this.router.navigate(['faculty']);\n          } else {\n            this.router.navigate(['profile']);\n          }\n        } else {\n          this.badUserNamePass = true;\n        }\n      });\n  }\n\n\n  ngOnInit() {\n  }\n\n\n}\n","module.exports = \".active.wbdv {\\r\\n  background-color: #b9bbbe;\\r\\n  border-color: #b9bbbe;\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-4 bg-light p-3 rounded\\\">\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item bg-dark text-light\\\">Modules</li>\\r\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\r\\n          class=\\\"list-group-item wbdv\\\">\\r\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\r\\n          {{module.title}}</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"col-8 bg-light p-3 rounded\\\">\\r\\n    <app-lesson-tabs></app-lesson-tabs>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ModuleService} from '../../services/module.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleService,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findAllModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n\\r\\n.needs-validation {\\r\\n  width: 100%;\\r\\n  /*max-width: 800px;*/\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n  margin-top: 40px;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<section class=\\\"content\\\">\\n  <div class=\\\"container\\\">\\n    <!--<div class=\\\"alert alert-success message\\\" role=\\\"alert\\\">-->\\n      <!--<strong class=\\\"message-success\\\">Profile successfully updated</strong>-->\\n    <!--</div>-->\\n    <form class=\\\"needs-validation\\\" #formProf=\\\"ngForm\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"username\\\" class=\\\"col-sm-2 col-form-label\\\">Username</label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"Username\\\" disabled id=\\\"username\\\"\\n                 [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"firstname\\\" class=\\\"col-sm-2 col-form-label\\\">First Name</label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"First Name\\\"\\n                 [(ngModel)]=\\\"user.firstName\\\"\\n                 id=\\\"firstname\\\" name=\\\"firstName\\\" class=\\\"form-control\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"lastname\\\" class=\\\"col-sm-2 col-form-label\\\">Last Name</label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"Last Name\\\"\\n                 [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\" id=\\\"lastname\\\" class=\\\"form-control\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"phone\\\" class=\\\"col-sm-2 col-form-label\\\">Phone</label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"tel\\\" placeholder=\\\"xxx-xxx-xxxx\\\" maxlength=\\\"12\\\" pattern=\\\"^\\\\d{3}-\\\\d{3}-\\\\d{4}$\\\"\\n                 [(ngModel)]=\\\"user.phone\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\" #phone=\\\"ngModel\\\">\\n          <div [hidden]=\\\"phone.valid\\\" class=\\\"mt-2 alert alert-danger\\\">\\n            Please enter a valid phone number!! (Format: xxx-xxx-xxxx)\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"email\\\" placeholder=\\\"abc@xyz.com\\\" email=\\\"true\\\" [(ngModel)]=\\\"user.email\\\"\\n                 id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" #email=\\\"ngModel\\\">\\n          <div [hidden]=\\\"email.valid\\\" class=\\\"mt-2 alert alert-danger\\\">\\n            Please enter a valid email!!\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n\\n        <label for=\\\"address\\\" class=\\\"col-sm-2 col-form-label\\\">Address</label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input [(ngModel)]=\\\"user.address\\\"\\n                 placeholder=\\\"street city state\\\" name=\\\"address\\\" id=\\\"address\\\" class=\\\"form-control\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\" [hidden]=\\\"user.username=== 'admin' || user.username=== 'faculty' \\\">\\n\\n        <label for=\\\"lisOfCourses\\\" class=\\\"col-sm-2 col-form-label\\\">List of courses</label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n\\n          <div class=\\\"row navbar  rounded m-1 navbar-expand-lg bg-secondary text-light mb-2\\\" id=\\\"lisOfCourses\\\">\\n            <div class=\\\"col\\\">\\n              <strong>Course</strong>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <strong>Section Name</strong>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <strong>Maximum # of Seats</strong>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <strong>Available Seats</strong>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <strong>Grade</strong>\\n            </div>\\n            <div class=\\\"col\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row bg-light m-1 text-dark p-1 \\\" *ngFor=\\\"let section of studentSections\\\">\\n            <div class=\\\"col\\\">\\n              <a routerLink=\\\"/course/{{section.section.courseId}}/section\\\">\\n                {{courseMap[section.section.courseId]!=undefined && courseMap[section.section.courseId].title}} </a>\\n            </div>\\n            <div class=\\\"col\\\">\\n              {{section.section.name}}\\n            </div>\\n            <div class=\\\"col\\\">\\n              {{section.section.maxSeats}}\\n            </div>\\n            <div class=\\\"col\\\">\\n              {{section.section.availableSeats}}\\n            </div>\\n            <div class=\\\"col\\\">\\n              {{section.grade}}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <button [disabled]=\\\"user==null\\\" class=\\\"float-right btn btn-danger\\\"\\n                      (click)=\\\"unenroll(section.section)\\\">Un-Enroll\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!--<div class=\\\"form-group row\\\">-->\\n      <!--<label for=\\\"role\\\" class=\\\"col-sm-2 col-form-label\\\">Role</label>-->\\n\\n      <!--<div class=\\\"col-sm-10\\\">-->\\n      <!--<select id=\\\"role\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.role\\\" name=\\\"role\\\" >-->\\n      <!--<option value=\\\"\\\" selected >Select a role</option>-->\\n      <!--<option value=\\\"FACULTY\\\" >Faculty</option>-->\\n      <!--<option value=\\\"STUDENT\\\">Student</option>-->\\n      <!--<option value=\\\"ADMIN\\\">Admin</option>-->\\n\\n      <!--</select>-->\\n\\n      <!--</div>-->\\n      <!--</div>-->\\n      <!--<div class=\\\"form-group row\\\">-->\\n\\n      <!--<label for=\\\"dob\\\" class=\\\"col-sm-2 col-form-label\\\">Date Of Birth</label>-->\\n\\n      <!--<div class=\\\"col-sm-10\\\">-->\\n      <!--<input type=\\\"date\\\" [(ngModel)]=\\\"user.dateOfBirth\\\"-->\\n      <!--placeholder=\\\"1991-03-08\\\" name=\\\"dateOfBirth\\\" id=\\\"dob\\\" class=\\\"form-control\\\">-->\\n      <!--</div>-->\\n      <!--</div>-->\\n\\n      <div class=\\\"form-group row\\\">\\n        <span class=\\\"col-sm-2\\\"></span>\\n        <div class=\\\"col-sm-10 d-inline-block\\\">\\n          <div class=\\\"py-1\\\">\\n            <button type=\\\"button\\\" [disabled]=\\\"!formProf.form.valid\\\" class=\\\"btn btn-success form-control\\\" (click)=\\\"update(user)\\\" id=\\\"update\\\">Update\\n            </button>\\n          </div>\\n          <div class=\\\"py-1\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger form-control\\\" (click)=\\\"logout()\\\" id=\\\"logout\\\">Logout</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n</section>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {User} from './../../models/user.model.client';\nimport {UserService} from '../../services/user.service';\nimport {Router} from '@angular/router';\nimport {SectionService} from '../../services/section.service';\nimport {CourseService} from '../../services/course.service';\nimport {Course} from '../../models/course.model.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private userService: UserService, private service: SectionService,\n              private router: Router, private courseService: CourseService) {\n  }\n\n  user: User = new User();\n  studentSections = [];\n  // courses: Course[] = [];\n  courseMap = {};\n\n  update(user: User) {\n    this.userService.updateUserProfile(user);\n  }\n\n  logout() {\n    this.userService.logout().then(() =>\n      this.router.navigate(['login']));\n  }\n\n  ngOnInit() {\n    this.userService.findLoggedUser().then(\n      user => this.user = user).then(() =>\n      this.service.findSectionsForStudent()).then((sections) =>\n      this.studentSections = sections).then(() => this.courseService.findAllCourses().then(courses => {\n\n      for (const key in courses) {\n        if (courses.hasOwnProperty(key)) {\n          this.courseMap[courses[key].id] = courses[key];\n        }\n      }\n    }));\n  }\n\n  unenroll(section) {\n    this.service\n      .unenrollStudentInSection(section._id).then(() =>\n      this.service.findSectionsForStudent().then((sections) =>\n        this.studentSections = sections));\n  }\n\n}\n","module.exports = \"\\r\\n.mandatory{\\r\\n  color:red;\\r\\n}\\r\\n\\r\\n.needs-validation {\\r\\n  width: 100%;\\r\\n  max-width: 900px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n  margin-top: 100px;\\r\\n}\\r\\n\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\"","module.exports = \"<section class=\\\"content\\\">\\n  <div class=\\\"container\\\">\\n    <form class=\\\"needs-validation\\\" #form=\\\"ngForm\\\">\\n      <!--<div class=\\\"alert alert-success\\\" role=\\\"alert\\\">-->\\n      <!--<strong>User registered successfully!!</strong>-->\\n      <!--</div>-->\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!usernameExists\\\">\\n        Username already exists user another one !\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"username\\\" class=\\\"col-sm-2 col-form-label\\\">Username<span class=\\\"mandatory\\\">*</span></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\"\\n                 id=\\\"username\\\" class=\\\"form-control\\\" required #userName=\\\"ngModel\\\">\\n\\n\\n          <div [hidden]=\\\"userName.valid || userName.pristine\\\" class=\\\"mt-2 alert alert-danger\\\">\\n            Username required!!\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"password\\\" class=\\\"col-sm-2 col-form-label\\\">Password<span class=\\\"mandatory\\\">*</span></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"password\\\" placeholder=\\\"123qwe#$\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\"\\n                 id=\\\"password\\\" class=\\\"form-control\\\" required #pass=\\\"ngModel\\\">\\n            <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"mt-2 alert alert-danger\\\">\\n            Password required!!\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"verifypass\\\" class=\\\"col-sm-2 col-form-label\\\">Verify Password<span class=\\\"mandatory\\\">*</span></label>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"password\\\" placeholder=\\\"123qwe#$\\\" id=\\\"verifypass\\\"\\n                 [(ngModel)]=\\\"verifyPassword\\\" name=\\\"verifyPassword\\\" class=\\\"form-control\\\" [pattern]=\\\"password\\\" required #vPass=\\\"ngModel\\\">\\n          <div [hidden] = \\\"vPass.valid || vPass.pristine\\\" class=\\\"mt-2 alert alert-danger\\\">\\n            Password do not match!!\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <span class=\\\"col-sm-2\\\"></span>\\n        <div class=\\\"col-sm-10 d-inline-block\\\">\\n          <div class=\\\"py-1\\\">\\n            <button type=\\\"button\\\" (click)=\\\"register(username, password, verifyPassword); form.reset();\\\"\\n                    [disabled]=\\\"!form.form.valid\\\"\\n                    class=\\\"btn btn-success form-control\\\" id=\\\"signup\\\">Sign Up\\n            </button>\\n          </div>\\n          <!--<div class=\\\"py-1\\\">-->\\n          <!--<a href=\\\"../login/login.template.client.html\\\">Login</a>-->\\n          <!--</div>-->\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</section>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserService} from './../../services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  username: string;\n  password: string;\n  verifyPassword: string;\n  usernameExists: boolean;\n\n  constructor(private router: Router,\n              private service: UserService) {\n    this.usernameExists = false;\n  }\n\n\n  register(username, password, verifyPassword) {\n    this.service\n      .register({username, password})\n      .then((res) => {\n\n          if (res.status === true) {\n            this.router.navigate(['profile']);\n          } else {\n\n            this.usernameExists = true;\n          }\n        }\n      );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark mb-3\\\">\\n  <i class=\\\"btn fa fa-2x fa-times text-light mr-3\\\" routerLink=\\\"/home\\\"></i>\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{course.title}}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n          aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n</nav>\\n\\n<div class=\\\"alert alert-info\\\" [hidden]=\\\"user!=null\\\">\\n    Please login to access enrollment feature.\\n</div>\\n\\n<div class=\\\"alert alert-info\\\" [hidden]=\\\"!(user!=null &&\\n(user.username === 'admin' || user.username=== 'faculty'))\\\">\\n  Only students allowed to enroll.\\n</div>\\n\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row navbar navbar-expand-lg bg-secondary text-light mb-2\\\">\\n  <div class=\\\"col-4\\\">\\n    <strong>Section Name</strong>\\n  </div>\\n  <div class=\\\"col-3\\\">\\n    <strong>Maximum # of Seats</strong>\\n  </div>\\n  <div class=\\\"col-3\\\">\\n    <strong>Available Seats</strong>\\n  </div>\\n  <div class=\\\"col-2\\\">\\n  </div>\\n</div>\\n  <div class=\\\"row bg-light text-dark p-2 pl-2 mb-2\\\" *ngFor=\\\"let section of sections\\\">\\n    <div class=\\\"col-4\\\">\\n      {{section.name}}\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      {{section.maxSeats}}\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      {{section.availableSeats}}\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <button [disabled]=\\\"user==null || enrollAllowed == false || user.username === 'admin' || user.username=== 'faculty'\\\"\\n              [hidden]=\\\"!((!checkIfSectionAlreadyEnrolled(section)) && section.availableSeats !== 0)\\\"\\n              (click)=\\\"enroll(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Enroll\\n      </button>\\n      <button [disabled]=\\\"user==null\\\" class=\\\"float-right btn btn-danger\\\" [hidden]=\\\"!checkIfSectionAlreadyEnrolled(section)\\\"\\n              (click)=\\\"unenroll(section)\\\">Un-Enroll\\n      </button>\\n\\n      <h6 class=\\\"float-right\\\" [hidden]=\\\"!(section.availableSeats == 0 && !checkIfSectionAlreadyEnrolled(section))\\\">\\n        No Seats Left</h6>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionService} from '../../services/section.service';\nimport {Course} from '../../models/course.model.client';\nimport {CourseService} from '../../services/course.service';\nimport {UserService} from '../../services/user.service';\nimport {User} from '../../models/user.model.client';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionService, private courseService: CourseService,\n              private router: Router, private route: ActivatedRoute, private userService: UserService) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n\n  // sectionName = '';\n  // seats = '';\n  courseId = '';\n  sections = [];\n  studentSections = [];\n  course: Course;\n  user: User;\n  enrollAllowed: boolean;\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n\n    this.course = {id: '1', title: 'dummy'};\n    if (this.courseId != null && this.courseId !== '') {\n      this.courseService\n        .findCourseById(this.courseId)\n        .then((course) => this.course = course);\n      this.service\n        .findSectionsForCourse(courseId)\n        .then(sections => this.sections = sections).then(() => {\n          this.service.findSectionsForStudent()\n            .then((sections) => this.studentSections = sections).then(() => {\n            const ids = this.sections.map((section) => section._id);\n            this.enrollAllowed = !(this.studentSections.filter(sect =>\n              ids.includes(sect.section._id)).length > 0);\n          });\n        }\n      );\n    }\n  }\n\n\n  enroll(section) {\n    this.service\n      .enrollStudentInSection(section._id)\n      .then(() =>\n        this.service.findSectionsForCourse(this.courseId))\n      .then(sections => this.sections = sections).then(() =>\n      this.service.findSectionsForStudent().then((sections) =>\n        this.studentSections = sections)).then(() => {\n      const ids = this.sections.map((sec) => sec._id);\n      this.enrollAllowed = !(this.studentSections.filter(sect =>\n        ids.includes(sect.section._id)).length > 0);\n    });\n  }\n\n  unenroll(section) {\n    this.service\n      .unenrollStudentInSection(section._id).then(() =>\n      this.service.findSectionsForCourse(this.courseId))\n      .then(sections => this.sections = sections).then(() =>\n      this.service.findSectionsForStudent().then((sections) =>\n        this.studentSections = sections)).then(() => {\n      const ids = this.sections.map((sec) => sec._id);\n      this.enrollAllowed = !(this.studentSections.filter(sect =>\n        ids.includes(sect.section._id)).length > 0);\n    });\n  }\n\n  checkIfSectionAlreadyEnrolled(section) {\n    return this.studentSections.filter(sect => sect.section._id === section._id).length > 0;\n  }\n\n  ngOnInit() {\n\n    this.userService.findLoggedUser().then((user) => this.user = user);\n\n  }\n\n}\n","module.exports = \".active.wbdv {\\r\\n  background-color: #545b62;\\r\\n  border-color: #545b62;\\r\\n  color:white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"\\\">\\n<ul class=\\\"nav nav-pills mt-3\\\">\\n  <li *ngFor=\\\"let topic of topics\\\"\\n      class=\\\"nav-item \\\">\\n    <a class=\\\"nav-link wbdv\\\"\\n       [ngClass]=\\\"{'active': topic.id == topicId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\n      {{topic.title}}\\n    </a>\\n  </li>\\n</ul>\\n  <app-widget-list></app-widget-list>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TopicService} from '../../services/topic.service';\n\n@Component({\n  selector: 'app-topic-pills',\n  templateUrl: './topic-pills.component.html',\n  styleUrls: ['./topic-pills.component.css']\n})\nexport class TopicPillsComponent implements OnInit {\n\n  courseId;\n  moduleId;\n  lessonId;\n  topicId;\n  topics;\n\n  constructor(private service: TopicService,\n              private route: ActivatedRoute) {\n    this.topics = [];\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.topicId = params['topicId'];\n    this.loadTopics();\n  }\n\n  loadTopics() {\n    if (this.courseId !== undefined && this.moduleId !== undefined && this.lessonId !== undefined) {\n      this.service.findAllTopicsForLesson(this.courseId, this.moduleId, this.lessonId)\n        .then(topics => this.topics = topics);\n    }\n  }\n\n  ngOnInit() {\n    this.topics = [];\n  }\n\n}\n","module.exports = \"/* Sticky footer styles\\r\\n-------------------------------------------------- */\\r\\n\\r\\n\\r\\n.footer {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  width: 100%;\\r\\n  /* Set the fixed height of the footer here */\\r\\n  height: 60px;\\r\\n  line-height: 60px; /* Vertically center the text there */\\r\\n  background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n\\r\\n/* Custom page CSS\\r\\n-------------------------------------------------- */\\r\\n\\r\\n\\r\\n/* Not required for template or sticky footer method. */\\r\\n\\r\\n\\r\\n/*body > .container {*/\\r\\n\\r\\n\\r\\n/*padding: 60px 15px 0;*/\\r\\n\\r\\n\\r\\n/*}*/\\r\\n\\r\\n\\r\\n.footer > .container {\\r\\n  padding-right: 15px;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n\\r\\ncode {\\r\\n  font-size: 80%;\\r\\n}\\r\\n\\r\\n\\r\\n.title{\\r\\n  font-family: \\\"Fira Code Retina\\\";\\r\\n}\\r\\n\\r\\n\\r\\n.nav-link{\\r\\n  font-family: \\\"Arial\\\";\\r\\n  font-size: large;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.mainContainer {\\r\\n  padding: 100px 15px 0;\\r\\n}\\r\\n\"","module.exports = \"<header>\\r\\n  <!-- Fixed navbar -->\\r\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\">\\r\\n\\r\\n    <a class=\\\"navbar-brand \\\" href=\\\"#\\\"><i class=\\\"fas fa-book-open fa-2x\\\"></i></a>\\r\\n    <a class=\\\"navbar-brand \\\" href=\\\"#\\\"><h1 class=\\\"title\\\">Course Manager</h1></a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\"\\r\\n            aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"btn btn-dark\\\" [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/home\\\" >Home </a>\\r\\n          <!--<span class=\\\"sr-only\\\">(current)</span>-->\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n        <a [hidden]=\\\"(user === null)\\\" class=\\\"btn btn-dark ml-2\\\" [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/profile\\\" >Profile</a>\\r\\n      </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a [hidden]=\\\"!(user != null && user.username === 'admin')\\\" class=\\\"btn btn-dark ml-2\\\"\\r\\n             [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/admin\\\" >Admin</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a [hidden]=\\\"!(user != null && user.username === 'faculty')\\\" class=\\\"btn btn-dark ml-2\\\"\\r\\n             [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/faculty\\\" >Faculty Access</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <form class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n        <!--<input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">-->\\r\\n        <button [hidden]=\\\"!(user === null)\\\" class=\\\"btn btn-dark my-2 my-sm-0 mr-2\\\" routerLink=\\\"/login\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n        type=\\\"button\\\">Login</button>\\r\\n\\r\\n        <h5 [hidden]=\\\"user===null\\\"class=\\\"text-light my-1 mr-1\\\"><i [hidden]=\\\"user===null\\\" class=\\\"fa fa-user text-light\\\"></i>\\r\\n          {{user!=null && user.username}}</h5>\\r\\n        <button [hidden]=\\\"user===null\\\" class=\\\"btn btn-dark my-2 my-sm-0 mr-2\\\" (click)=\\\"logout()\\\"\\r\\n                type=\\\"button\\\">Logout</button>\\r\\n        <button class=\\\"btn btn-dark my-2 my-sm-0 mr-2\\\" routerLink=\\\"/register\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n        type=\\\"button\\\">Sign Up</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\\r\\n<div class=\\\"mainContainer\\\">\\r\\n  <router-outlet (activate)=\\\"sessionCheck()\\\" ></router-outlet>\\r\\n</div>\\r\\n<footer class=\\\"footer bg-dark\\\">\\r\\n  <div class=\\\"container text-center\\\">\\r\\n    <span class=\\\"text-muted\\\">@copyright Shubham Rastogi</span>\\r\\n  </div>\\r\\n</footer>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport {User} from '../../models/user.model.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  user: User;\n\n  constructor(private userService: UserService, private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  sessionCheck() {\n    this.userService.findLoggedUser().then((user) => this.user = user);\n  }\n\n  logout() {\n\n    this.userService.logout().then(() => this.router.navigate(['*']))\n      .then(() =>\n        this.userService.findLoggedUser().then((user) => this.user = user));\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div  class=\\\"border rounded mt-3\\\" [hidden]=\\\"!(widgets!=null  &&  widgets.length>0)\\\" >\\r\\n  <div *ngFor=\\\"let widget of widgets\\\" class=\\\"border-bottom p-3\\\">\\r\\n    <div [ngSwitch]=\\\"widget.widgetType\\\">\\r\\n      <div *ngSwitchCase=\\\"'Heading'\\\">\\r\\n        <div [ngSwitch]=\\\"widget.size\\\">\\r\\n          <!--<h1>Heading</h1>-->\\r\\n          <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\r\\n          <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\r\\n          <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\r\\n          <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>\\r\\n          <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>\\r\\n          <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'Link'\\\">\\r\\n        <!--<h1>Link</h1>-->\\r\\n        <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'Paragraph'\\\">\\r\\n        <!--<h1>Paragraph</h1>-->\\r\\n        <p>{{widget.text}}</p>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'List'\\\">\\r\\n        <!--<h1>ListWidget</h1>-->\\r\\n        <ul class=\\\"list-group\\\">\\r\\n          {{widget.text}}\\r\\n          <li class=\\\"list-group-item\\\"\\r\\n              *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\r\\n            {{item}}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'Image'\\\">\\r\\n        <!--<h1>Image</h1>-->\\r\\n        <img src=\\\"{{widget.src}}\\\" width=\\\"40%\\\" height=\\\"40%\\\" title={{widget.text}}/>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'Exam'\\\">\\r\\n        <h1>Exam Widget</h1>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'Assignment'\\\">\\r\\n        <h1>Assignment</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {WidgetService} from '../../services/widget.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetService,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n  courseId;\n  moduleId;\n  lessonId;\n  topicId;\n\n  setContext(params) {\n    this.context = params;\n    this.loadWidgets(params.courseId, params.moduleId, params.lessonId, params.topicId);\n  }\n\n  sortByWidgetOrder(array) {\n    array.sort(function (p, q) {\n      return p.orderOfWidget - q.orderOfWidget;\n    });\n\n    return array;\n  }\n\n  loadWidgets(courseId, moduleId, lessonId, topicId) {\n    this.widgets = [];\n    if (courseId !== undefined && moduleId !== undefined && lessonId !== undefined && topicId !== undefined) {\n      this.service.findAllWidgetsForTopics(courseId, moduleId, lessonId, topicId).then(widgets => {\n        if (widgets.length > 0) {\n          this.widgets = this.sortByWidgetOrder(widgets);\n        }\n      });\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Section {\r\n\r\n  id: string;\r\n  name: string;\r\n  maxSeats: number;\r\n  availableSeats: number;\r\n  courseId: string;\r\n}\r\n\r\n","export class User {\r\n\r\n  id: string;\r\n  dateOfBirth: string;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: string;\r\n  username: string;\r\n  phone: string;\r\n  role: string;\r\n  address: string;\r\n\r\n\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoursePrivacyService {\n\n  location: string;\n  HEROKU_BASE_URL = 'https://whiteboard-middle-tier-node.herokuapp.com/api/course/COURSEID/privacy';\n  LOCAL_BASE_URL = 'http://localhost:5500/api/course/COURSEID/privacy';\n  URL: string;\n\n  constructor() {\n    this.location = window.location.href;\n    if (!location.toString().includes('localhost')) {\n      this.URL = this.HEROKU_BASE_URL;\n    } else {\n      this.URL = this.LOCAL_BASE_URL;\n    }\n  }\n\n  makeCoursePrivate(courseId) {\n    return fetch(this.URL.replace('COURSEID', courseId), {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  makeCoursePublic(courseId) {\n    return fetch(this.URL.replace('COURSEID', courseId), {\n      method: 'DELETE',\n      credentials: 'include'\n    });\n  }\n\n\n  getAllPrivateCourses() {\n    return fetch(this.URL.replace('COURSEID/', ''), {\n      credentials: 'include'\n    })\n      .then(response => {\n        if (response.headers.get('content-type') != null) {\n          return response.json();\n        } else {\n          return [];\n        }\n      });\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  location: string;\n  COURSE_URL: string;\n  HEROKU_BASE_URL = 'https://webdev-rastogi-shubham.herokuapp.com/api/course';\n  LOCAL_BASE_URL = 'http://localhost:8080/api/course';\n\n  constructor() {\n    this.location = window.location.href;\n    if (!location.toString().includes('localhost')) {\n      this.COURSE_URL = this.HEROKU_BASE_URL;\n    } else {\n      this.COURSE_URL =  this.LOCAL_BASE_URL;\n    }\n  }\n\n\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n\n  findCourseById(courseId) {\n    return fetch(this.COURSE_URL + '/' + courseId)\n      .then(response => response.json());\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LessonService {\n\n  location: string;\n  COURSE_URL: string;\n  HEROKU_BASE_URL = 'https://webdev-rastogi-shubham.herokuapp.com/api/course';\n  LOCAL_BASE_URL = 'http://localhost:8080/api/course';\n\n  constructor() {\n    this.location = window.location.href;\n    if (!location.toString().includes('localhost')) {\n      this.COURSE_URL = this.HEROKU_BASE_URL;\n    } else {\n      this.COURSE_URL =  this.LOCAL_BASE_URL;\n    }\n  }\n\n  findAllLessonsForModule(courseId, moduleId) {\n    return fetch(this.COURSE_URL + '/' + courseId + '/module/' + moduleId + '/lesson',\n      {\n        method: 'GET'\n      }).then(function (response) {\n\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return null;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleService {\n\n  location: string;\n  COURSE_URL: string;\n  HEROKU_BASE_URL = 'https://webdev-rastogi-shubham.herokuapp.com/api/course';\n  LOCAL_BASE_URL = 'http://localhost:8080/api/course';\n\n  constructor() {\n    this.location = window.location.href;\n    if (!location.toString().includes('localhost')) {\n      this.COURSE_URL = this.HEROKU_BASE_URL;\n    } else {\n      this.COURSE_URL =  this.LOCAL_BASE_URL;\n    }\n  }\n\n  findAllModulesForCourse(courseId) {\n    return fetch(this.COURSE_URL + '/' + courseId + '/module',\n      {\n        method: 'GET'\n      }).then(function (response) {\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return [];\n      }\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n\n  location: string;\n  COURSE_SECTION_URL: string;\n  SECTION_URL: string;\n  STUDENT_SECTION: string;\n  URL: string;\n\n  constructor() {\n    this.location = window.location.href;\n    if (!location.toString().includes('localhost')) {\n      this.COURSE_SECTION_URL = 'https://whiteboard-middle-tier-node.herokuapp.com/api/course/COURSEID/section';\n      this.SECTION_URL = 'https://whiteboard-middle-tier-node.herokuapp.com/api/section';\n      this.STUDENT_SECTION = 'https://whiteboard-middle-tier-node.herokuapp.com/api/student/sections';\n    } else {\n      this.COURSE_SECTION_URL = 'http://localhost:5500/api/course/COURSEID/section';\n      this.SECTION_URL = 'http://localhost:5500/api/section';\n      this.STUDENT_SECTION = 'http://localhost:5500/api/student/sections';\n    }\n  }\n\n\n  findSectionsForStudent() {\n    return fetch(this.STUDENT_SECTION, {\n      credentials: 'include'\n    })\n      .then(response => {\n        if (response.headers.get('content-type') != null) {\n          return response.json();\n        } else {\n          return [];\n        }\n      });\n  }\n\n  findAllSections() {\n    return fetch(this.SECTION_URL, {\n      credentials: 'include'\n    })\n      .then(response => {\n        if (response.headers.get('content-type') != null) {\n          return response.json();\n        } else {\n          return [];\n        }\n      });\n  }\n\n  enrollStudentInSection(sectionId) {\n    const url = this.SECTION_URL + '/' + sectionId + '/enroll';\n    return fetch(url, {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  unenrollStudentInSection(sectionId) {\n    const url = this.SECTION_URL + '/' + sectionId + '/unenroll';\n    return fetch(url, {\n      method: 'delete',\n      credentials: 'include'\n    });\n  }\n\n  findSectionsForCourse(courseId) {\n    return fetch(this.COURSE_SECTION_URL.replace('COURSEID', courseId))\n      .then(response => {\n        if (response.headers.get('content-type') != null) {\n          return response.json();\n        } else {\n          return [];\n        }\n      });\n  }\n\n  createSection(courseId, name, seats) {\n    const section = {courseId, name, availableSeats: seats, maxSeats: seats};\n    return fetch(this.COURSE_SECTION_URL.replace('COURSEID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  deleteSection(sectionId) {\n    return fetch(this.SECTION_URL + '/' + sectionId, {\n      method: 'DELETE',\n    });\n  }\n\n\n  updateSection(sectionId, section) {\n    console.log(section);\n    return fetch(this.SECTION_URL + '/' + sectionId, {\n      method: 'PUT',\n      body: JSON.stringify(section),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopicService {\n\n  location: string;\n  COURSE_URL: string;\n  HEROKU_BASE_URL = 'https://webdev-rastogi-shubham.herokuapp.com/api/course';\n  LOCAL_BASE_URL = 'http://localhost:8080/api/course';\n\n  constructor() {\n    this.location = window.location.href;\n    if (!location.toString().includes('localhost')) {\n      this.COURSE_URL = this.HEROKU_BASE_URL;\n    } else {\n      this.COURSE_URL =  this.LOCAL_BASE_URL;\n    }\n  }\n\n  findAllTopicsForLesson(courseId, moduleId, lessonId) {\n    return fetch(this.COURSE_URL + '/' + courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/topic',\n      {\n        method: 'GET'\n      }).then(function (response) {\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return [];\n      }\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  url: string;\n  urlRegister: string;\n  urlLoggedUser: string;\n  urlUpdateProfile: string;\n  urlLogin: string;\n  urlPassReset: string;\n  urlVerifyUsername: string;\n  urlLogout: string;\n  urlDeleteProfile: string;\n\n  constructor() {\n    let base;\n    if (!location.toString().includes('localhost')) {\n      base = 'https://whiteboard-middle-tier-node.herokuapp.com';\n    } else {\n      base = 'http://localhost:5500';\n    }\n    this.url = base + '/api/user';\n    this.urlRegister = base + '/api/register';\n    this.urlLoggedUser = base + '/api/profile';\n    this.urlUpdateProfile = base + '/api/profile';\n    this.urlLogin = base + '/api/login';\n    this.urlPassReset = base + '/api/reset';\n    this.urlVerifyUsername = base + '/api/verify';\n    this.urlLogout = base + '/api/logout';\n    this.urlDeleteProfile = base + '/api/delete';\n  }\n\n  register(user) {\n    return fetch(this.urlRegister, {\n      method: 'POST',\n      body: JSON.stringify(user),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return null;\n      }\n    });\n  }\n\n  login(username, password) {\n    return fetch(this.urlLogin, {\n      method: 'POST',\n      body: JSON.stringify({username: username, password: password}),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return null;\n      }\n    });\n  }\n\n\n  logout() {\n    return fetch(this.urlLogout, {\n      method: 'POST',\n      credentials: 'include',\n    });\n  }\n\n  findLoggedUser() {\n    return fetch(this.urlLoggedUser, {\n      credentials: 'include',\n    }).then(response => {\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return null;\n      }\n    });\n  }\n\n\n  updateUserProfile(user) {\n    return fetch(this.urlUpdateProfile, {\n      method: 'PUT',\n      body: JSON.stringify(user),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return null;\n      }\n    });\n  }\n\n  // sendPasswordResetEmail(emailId, pageLink, callback) {\n  //   return fetch(this.urlPassReset, {\n  //     method: 'POST',\n  //     body: emailId + ' ' + pageLink,\n  //     // headers: {\n  //     //     'content-type': 'application/json'\n  //     // }\n  //   }).then(callback);\n  // }\n  //\n  // verifyUser(username, callback) {\n  //   return fetch(this.urlVerifyUsername + '/' + username).then(response => {\n  //     if (response.headers.get('content-type') != null) {\n  //       return response.json();\n  //     } else {\n  //       return null;\n  //     }\n  //   }).then(callback);\n  // }\n  //\n  // createUser(user) {\n  //   console.log(user);\n  //   return fetch(this.url, {\n  //     method: 'post',\n  //     body: JSON.stringify(user),\n  //     headers: {\n  //       'content-type': 'application/json'\n  //     }\n  //\n  //   }).then(response => response.json());\n  // }\n  //\n  // findUserById(userId, callback) {\n  //   return fetch(this.url + '/' + userId).then(response => response.json()).then(callback);\n  // }\n  //\n  //\n  // updateUser(userId, user, callback) {\n  //   return fetch(this.url + '/' + userId, {\n  //     method: 'PUT',\n  //     body: JSON.stringify(user),\n  //     headers: {\n  //       'content-type': 'application/json'\n  //     }\n  //   }).then(response => response.json()).then(callback);\n  // }\n  //\n  // deleteUser(userId, callback) {\n  //   return fetch(this.url + '/' + userId, {\n  //     method: 'DELETE',\n  //   }).then(callback);\n  // }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetService {\n\n  location: string;\n  COURSE_URL: string;\n  HEROKU_BASE_URL = 'https://webdev-rastogi-shubham.herokuapp.com/api/course';\n  LOCAL_BASE_URL = 'http://localhost:8080/api/course';\n\n  constructor() {\n    this.location = window.location.href;\n    if (!location.toString().includes('localhost')) {\n      this.COURSE_URL = this.HEROKU_BASE_URL;\n    } else {\n      this.COURSE_URL =  this.LOCAL_BASE_URL;\n    }\n  }\n\n  findAllWidgetsForTopics(courseId, moduleId, lessonId, topicId) {\n    return fetch(this.COURSE_URL + '/' + courseId + '/module/' +\n      moduleId + '/lesson/' + lessonId + '/topic/' + topicId + '/widget',\n      {\n        method: 'GET'\n      }).then(function (response) {\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return [];\n      }\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}